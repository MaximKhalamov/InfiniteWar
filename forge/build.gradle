buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
}

plugins {
    id 'com.gradleup.shadow'
}

loom {
    forge {
        mixinConfig "infinitewar.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

repositories {
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
    maven {
        url "https://maven.eliotlash.com/"
    }
    mavenCentral()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    modImplementation("software.bernie.geckolib:geckolib-forge-${minecraft_version}:${geckolib_version}")

    implementation "com.eliotlash.mclib:mclib:20"

    forgeRuntimeLibrary 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
    relocate 'com.fasterxml.jackson', 'com.quazarx.infinitewar.shadowed.jackson'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
